-- CREATE TABLE user 
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     username VARCHAR(63) UNIQUE NOT NULL,
--     password VARCHAR(255),
--     clearance TINYINT UNSIGNED NOT NULL,
--     session_id UUID
-- )

-- CREATE TABLE product_group 
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     name VARCHAR(63) UNIQUE NOT NULL
-- )

-- CREATE TABLE product 
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     group_id INT NOT NULL,
--     CONSTRAINT FOREIGN KEY (group_id) REFERENCES product_group (id),
--     commodity VARCHAR(63) NOT NULL,
--     risk_score TINYINT UNSIGNED NOT NULL
-- )

-- run sql scripts dowloaded from
-- https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/sql/regions.sql
-- https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/sql/subregions.sql
-- https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/sql/countries.sql

-- ALTER TABLE countries
-- DROP COLUMN iso2,
-- DROP COLUMN capital,
-- DROP COLUMN currency,
-- DROP COLUMN currency_name,
-- DROP COLUMN currency_symbol,
-- DROP COLUMN tld,
-- DROP COLUMN native,
-- DROP COLUMN region,
-- DROP COLUMN subregion,
-- DROP COLUMN nationality,
-- DROP COLUMN timezones,
-- DROP COLUMN translations,
-- DROP COLUMN emojiU,
-- DROP COLUMN created_at,
-- DROP COLUMN deleted_at,
-- DROP COLUMN flag,
-- DROP CONSTRAINT country_continent_final,
-- DROP CONSTRAINT country_subregion_final,
-- DROP COLUMN subregion_id,
-- ADD COLUMN ranking TINYINT UNSIGNED NOT NULL,
-- ADD COLUMN fatf TINYINT UNSIGNED NOT NULL,
-- ADD COLUMN transparency TINYINT UNSIGNED NOT NULL,
-- ADD COLUMN world_bank TINYINT UNSIGNED NOT NULL,
-- ADD COLUMN sovereignty_id MEDIUMINT UNSIGNED,
-- ADD CONSTRAINT FOREIGN KEY (sovereignty_id) REFERENCES countries (id),
-- RENAME TO country

-- ALTER TABLE regions RENAME TO region

-- CREATE TABLE address
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     country_id MEDIUMINT UNSIGNED,
--     CONSTRAINT FOREIGN KEY (country_id) REFERENCES country (id),
--     address_lines VARCHAR(255),
--     locality VARCHAR(63),
--     region VARCHAR(63),
--     postcode VARCHAR(31)
-- )

-- CREATE TABLE contact 
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     family_name VARCHAR(63) NOT NULL,
--     forenames VARCHAR(63) NOT NULL,
--     email VARCHAR(127) UNIQUE NOT NULL,
--     calling_code VARCHAR(6) NOT NULL,
--     phone VARCHAR(13) NOT NULL
-- )

-- ALTER TABLE address
-- MODIFY family_name VARCHAR(63) NOT NULL,
-- MODIFY forenames VARCHAR(63) NOT NULL,
-- MODIFY email VARCHAR(127) UNIQUE NOT NULL,
-- MODIFY calling_code VARCHAR(6) NOT NULL,
-- MODIFY phone VARCHAR(13) NOT NULL

-- DESCRIBE contact

-- CREATE TABLE individual
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     contact_id INT UNIQUE,
--     CONSTRAINT FOREIGN KEY (contact_id) REFERENCES contact (id),
--     local_name VARCHAR(63),
--     local_forenames VARCHAR(63),
--     date_of_birth DATE,
--     passport VARCHAR(63) UNIQUE,
--     expeiry_date DATE,
--     issuing MEDIUMINT UNSIGNED,
--     CONSTRAINT FOREIGN KEY (issuing) REFERENCES country (id),
--     pep BOOLEAN NOT NULL DEFAULT false,
--     pep_country MEDIUMINT UNSIGNED,
--     CONSTRAINT FOREIGN KEY (pep_country) REFERENCES country (id),
--     pep_notes VARCHAR(255),
--     notes VARCHAR(255),
--     address_id INT,
--     CONSTRAINT FOREIGN KEY (address_id) REFERENCES address (id)
-- )

-- CREATE VIEW individual_view AS
-- SELECT 
-- individual.id,
-- individual.pep,
-- individual.local_name,
-- individual.local_forenames,
-- individual.contact_id,
-- contact.family_name,
-- contact.forenames,
-- individual.address_id
-- -- ,
-- -- country.name AS country_name
-- FROM
-- individual,
-- contact,
-- address
-- -- ,
-- -- country
-- WHERE
-- contact.id = individual.contact_id AND
-- address.id = individual.address_id 
-- -- AND
-- -- country.id = address.country_id
-- WITH CHECK OPTION

-- CREATE TABLE company_group 
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     name VARCHAR(63) NOT NULL
-- )

-- CREATE TABLE company_type 
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     group_id INT NOT NULL,
--     CONSTRAINT FOREIGN KEY (group_id) REFERENCES company_group (id),
--     name VARCHAR(63) NOT NULL,
--     notes VARCHAR(255),
--     risk_score TINYINT UNSIGNED NOT NULL
-- )

-- CREATE TABLE company
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     uuid VARCHAR(63) UNIQUE,
--     name VARCHAR(63) UNIQUE,
--     local_name VARCHAR(63) UNIQUE,
--     is_branch BOOLEAN NOT NULL DEFAULT false,
--     address_id INT UNIQUE,
--     CONSTRAINT FOREIGN KEY (address_id) REFERENCES address (id),
--     branch_address_id INT UNIQUE,
--     CONSTRAINT FOREIGN KEY (branch_address_id) REFERENCES address (id),
--     website VARCHAR(127) UNIQUE,
--     contact_id INT,
--     CONSTRAINT FOREIGN KEY (contact_id) REFERENCES contact (id),
--     is_public BOOLEAN NOT NULL DEFAULT false,
--     comercial_registery VARCHAR(127) UNIQUE,
--     branch_registery VARCHAR(127) UNIQUE,
--     listing_country_id MEDIUMINT UNSIGNED,
--     CONSTRAINT FOREIGN KEY (listing_country_id) REFERENCES country (id),
--     lei VARCHAR(127),
--     pep BOOLEAN NOT NULL DEFAULT false,
--     soe BOOLEAN NOT NULL DEFAULT false,
--     regulated BOOLEAN NOT NULL DEFAULT false,
--     ancillary BOOLEAN NOT NULL DEFAULT false,
--     acer VARCHAR(127),
--     exchange CHAR(3)
-- )

-- CREATE VIEW company_view AS
-- SELECT 
-- company.id,
-- company.name,
-- company.local_name,
-- company.contact_id,
-- company.address_id
-- -- ,
-- -- country.name AS country_name
-- FROM
-- company,
-- contact,
-- address
-- -- ,
-- -- country
-- WHERE
-- contact.id = company.contact_id AND
-- address.id = company.address_id 
-- -- AND
-- -- country.id = address.country_id
-- WITH CHECK OPTION

-- CREATE TABLE vessel 
-- (
--     id INT AUTO_INCREMENT,
--     PRIMARY KEY(id),
--     name VARCHAR(63),
--     imo VARCHAR(63),
--     owner_id INT,
--     CONSTRAINT FOREIGN KEY (owner_id) REFERENCES company (id),
--     manager_id INT,
--     CONSTRAINT FOREIGN KEY (manager_id) REFERENCES company (id)
-- )

-- CREATE TABLE exchange
-- (
--     code CHAR(3),
--     PRIMARY KEY(code),
--     description VARCHAR(255) NOT NULL
-- )

-- adapted from https://globalexchanges.com/regulator-directory/

-- CREATE TABLE regulator
-- (
--     code CHAR(3),
--     PRIMARY KEY(code),
--     name VARCHAR(127) NOT NULL,
--     region VARCHAR(63),
--     jurisdiction VARCHAR(63),
--     website VARCHAR(127) UNIQUE NOT NULL
-- )
